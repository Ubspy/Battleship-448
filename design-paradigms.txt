Pinpointing one particular design paradigm that this team used is quite the heavy task. I might go as far to say this team didn't even use a design paradigm at all. Since that doesn't meet the objectives for this course though, I'll do my best with what I have. This team implemented a little bit from multiple paradigms. The first is the object oriented design paradigm. The way they managed the boards for both players were objects that held a matrix of integers or ship objects, which is another aspect of the object oriented design paradigm they used. The board has methods for firing or placing a ship, and the ship class has a method for seeing if the ship was sunk, and to register a hit on a ship. I believe that the object oriented design ended there, since the rest of the program wasn't organized into any other objects than those two. The rest of it can only really fit into component-level design. The website itself is separated into various components: the left board, the right board, the turn control buttons, and the textbox. There are on-click events for all of these except the textbox that then interact with the objects they have in their code. There is not much structure past this, you can barely differentiate between the different click events for the components, as well as the different behaviors for the components based on what state the game is in. I believe this could've been easily solved if they put a little more thought into the design of the code before they started.
