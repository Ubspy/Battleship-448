Pinpointing one particular design paradigm that this team used is quite the heavy task. I might go as far to say this team didn't even use a particular design paradigm at all. However, I'll do the best I can to see through the fog. This team implemented multiple paradigms, the first major one being object oriented design. The way they managed the boards for both players were objects that held a matrix of integers or ship objects, which is another aspect of the object oriented design paradigm they used. The board has methods for firing or placing a ship, and the ship class has a method for seeing if the ship was sunk, and to register a hit on a ship. I believe that the object oriented design ended there, since the rest of the program wasn't organized into any other objects than those two. The rest of it was component-level design. The website itself is separated into various components: the left board, the right board, the turn control buttons, and the textbox. There are on-click events for all of these except the textbox that then interact with the objects they have in their code. Many of the functions were found in the main file, and off of the different click events were found in the same main function. This made the callbacks quite long and difficult to read, especially since they had to handle up to five of six conditions in one callback. I believe this could've been easily solved if they put a little more thought into the design of the code before they started implementing.
